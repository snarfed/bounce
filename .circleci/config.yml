# Main build and test pipeline.
#
# CircleCI automatically reads this file from our repo and uses it for
# configuration. Docs:
# https://circleci.com/docs/2.1/configuration-reference/
# https://circleci.com/docs/2.1/sample-config/
version: 2.1

jobs:
  build:
    docker:
      - image: cimg/python:3.12

    steps:
      - checkout

      - restore_cache:
          key: venv-1-{{ .Branch }}-{{ checksum "requirements.txt" }}

      - run:
          name: Base dependencies
          command: |
            # google-cloud-sdk: https://cloud.google.com/sdk/docs/install#deb
            echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
            curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
            sudo apt-get update
            sudo apt-get install -y apt-transport-https ca-certificates gnupg google-cloud-sdk pkg-config

      - run:
          name: Base dependencies for tests
          command: |
            sudo apt-get install -y google-cloud-cli-firestore-emulator default-jre

      - run:
          name: Python dependencies
          command: |
            pip install -U pip flake8
            pip -V
            # make sure we install these at head, below
            pip uninstall -y arroba granary lexrpc oauth-dropins
            pip install -U -r requirements.txt
            pip install coverage coveralls
            ln -sf `pyenv prefix`/lib/python3.12/site-packages/oauth_dropins/static oauth_dropins_static

      - run:
          name: Build and test
          command: |
            CLOUDSDK_CORE_PROJECT=brid-gy gcloud emulators firestore start --host-port=:8089 --database-mode=datastore-mode < /dev/null >& /tmp/firestore-emulator.log &
            sleep 5s
            python -m coverage run --source=. --omit=appengine_config.py,tests/\* -m unittest discover -v
            python -m coverage html -d /tmp/coverage_html
            if [ "$COVERALLS_REPO_TOKEN" != "" ]; then coveralls || true; fi

            # check for unintentionally overridden test methods
            # https://flake8.pycqa.org/en/latest/user/error-codes.html#error-codes
            # https://flake8.pycqa.org/en/latest/user/options.html#cmdoption-flake8-select
            flake8 --select=F811 tests/test_*.py

      - run:
          name: oauth-dropins, for static assets
          command: |
            git clone --depth=1 https://github.com/snarfed/oauth-dropins.git ../oauth-dropins

      # - run:
      #     name: Deploy
      #     command: |
      #       echo $CIRCLE_BRANCH $CIRCLE_USERNAME
      #       # don't deploy on dependabot merges. $CIRCLE_USERNAME is unset for
      #       # GitHub users who don't have Circle accounts, like dependabot.
      #       if [[ $CIRCLE_BRANCH == "main" && $CIRCLE_USERNAME != "" ]]; then
      #         echo $FLASK_SECRET_KEY > flask_secret_key
      #         echo $REPO_TOKEN > repo_token
      #         echo $GCLOUD_SERVICE_KEY > /tmp/service_account_creds.json
      #         echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=/tmp/service_account_creds.json
      #         gcloud config set project bounce-migrate
      #         gcloud -q app deploy --no-cache app.yaml # index.yaml queue.yaml
      #       fi

      - save_cache:
          key: venv-1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - /home/circleci/.pyenv
            # Ideally we'd cache these, but they need root, and the cimg/python
            # Docker image's default user is circleci :/
            # https://github.com/cypress-io/circleci-orb/issues/269
            #
            # - /usr/lib/google-cloud-sdk
            # - /usr/lib/jvm/java-11-openjdk-amd64

      - store_artifacts:
          path: /tmp/coverage_html
